{"version":3,"sources":["components/New.jsx","components/Edit.jsx","components/List.jsx","components/Show.jsx","App.js","reportWebVitals.js","index.js"],"names":["New","props","useState","name","type","description","skill1","skill2","skill3","pet","setPet","error","setError","handleChange","e","target","value","className","to","onSubmit","preventDefault","axios","post","then","res","navigate","catch","err","response","data","errors","onChange","style","color","message","skills","Edit","id","setErr","useEffect","get","console","log","put","List","pets","setPets","deleted","scope","map","petid","_id","class","Show","disabled","setDisabled","onClick","delete","likes","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f1a726c.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport axios from 'axios'\r\nimport {Link,navigate} from '@reach/router'\r\n\r\n\r\nconst New = (props) => {\r\n\tconst [pet,setPet] = useState({\r\n\t\t\tname:\"\",\r\n\t\t\ttype:\"\",\r\n\t\t\tdescription:\"\",\r\n\t\t\tskill1:\"\",\r\n\t\t\tskill2:\"\",\r\n\t\t\tskill3:\"\"\r\n\t})\r\n\r\n\tconst [error,setError] = useState({})\r\n\tconst handleChange = e =>{\r\n\t\t\tconst {name,value} = e.target\r\n\t\t\tsetPet({...pet,[name]:value})\r\n\t} \r\n\tconst handleSubmit = e =>{\r\n\t\t\te.preventDefault()\r\n\t\t\tconst {name,value} = e.target\r\n\t\t\taxios.post(`http://localhost:8000/api/pets`,pet)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tsetPet({\r\n\t\t\t\tname:\"\"\r\n\t\t\t})\r\n\t\t\t\tnavigate('/')\r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconst {errors,name} = err.response.data\r\n\t\t\t\tsetError(errors)\r\n\t\t\t})\r\n\t}\r\n  return (\r\n    <>\r\n\t    <h1>new pet</h1>\r\n\t    <Link className=\"btn btn-success\" to=\"/\">back to list</Link>\r\n\t    <form onSubmit={handleSubmit}>\r\n\t    \t<h4>Add a new pet:</h4>\r\n\t    \t<p>Name:\r\n\t    \t<br/>\r\n\t    \t\t<input value={pet.name} onChange={handleChange} type=\"text\" name=\"name\"/>\r\n\t    \t\t{ error.name ? <p style={{color:\"red\"}}>{error.name.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t\t\t\t</p>\r\n\t    \t<p>type:\r\n\t    \t<br/>\r\n\t    \t\t<input value={pet.type} onChange={handleChange} type=\"text\" name=\"type\"/>\r\n\t    \t\t{ error.type ? <p style={{color:\"red\"}}>{error.type.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t    \t</p>\r\n\r\n\r\n\t    \t<p>description:\r\n\t    \t<br/>\r\n\t    \t\t<input value={pet.description} onChange={handleChange} type=\"text\" name=\"description\"/>\r\n\t    \t\t{ error.description ? <p style={{color:\"red\"}}>{error.description.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t    \t</p>\r\n\r\n\t    \t<p><h3>skills:</h3>\r\n\t    \t<br/>\r\n\t    \t\tskill 1:<br/>\r\n\t    \t\t<input onChange={handleChange} type=\"text\" name=\"skill1\"/>\r\n\t    \t\t{ error.skills ? <p style={{color:\"red\"}}>{error.skills.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t    \t\tskill 2:<br/>\r\n\t    \t\t<input onChange={handleChange} type=\"text\" name=\"skill2\"/>\r\n\t    \t\t{ error.skills ? <p style={{color:\"red\"}}>{error.skills.message}</p>: null}\r\n\t    \t\t<br/>\r\n    \t\tskill 3:<br/>\r\n\t    \t\t<input onChange={handleChange} type=\"text\" name=\"skill3\"/>\r\n\t    \t\t{ error.skills ? <p style={{color:\"red\"}}>{error.skills.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t    \t</p>\r\n\r\n\t    \t\t<input className=\"btn btn-success\" type=\"submit\" value=\"create\"/>\r\n\t    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default New;","import {useState,useEffect} from 'react';\r\nimport {Link,navigate} from '@reach/router'\r\nimport axios from 'axios'\r\n\r\nconst Edit = ({id}) => {\r\n\t\tconst [pet,setPet] = useState()\r\n\t\tconst [error,setError] = useState({})\r\n\t\tconst [err,setErr] = useState(true)\r\n\t\tuseEffect(() =>{\r\n\t\t\taxios.get(`http://localhost:8000/api/pets/${id}`)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tsetPet(res.data)\r\n\t\t\t\tsetErr(false)})\r\n\t\t\t.catch(err=>setErr(true))\r\n\t},[])\r\n\t\tconst handleSubmit = (e) =>{\r\n\t\t\te.preventDefault()\r\n\t\t\tconsole.log(id)\r\n\t\t\taxios.put(`http://localhost:8000/api/pets/${id}`,pet)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tnavigate(\"/\")\r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconst {errors} = err.response.data\r\n\t\t\t\tsetError(errors)\r\n\t\t\t})\r\n\t\t}\r\n\t\tconst handleChange = e =>{\r\n\t\t\tconst {name,value} = e.target\r\n\t\t\tsetPet({...pet,[name]:value})\r\n\t} \r\n  return (\r\n    <>\r\n\t    \t{\r\n\t    \t\terr==true ? null\r\n\t    \t\t:\r\n\t  <>\r\n  <h1>Pet shelter</h1>\r\n    <h4>Edit:  {pet.name}</h4>\r\n\r\n    <Link className=\"btn btn-success\" to=\"/\">back to list</Link>\r\n    <br/>\r\n\t    <form onSubmit={handleSubmit}>\r\n\t\t    \t<p>Name:\r\n\t    \t<br/>\r\n\t    \t\t<input onChange={handleChange} type=\"text\" name=\"name\" value={pet.name}/>\r\n\t    \t\t{ error.name ? <p style={{color:\"red\"}}>{error.name.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t    \t<p>type:\r\n\t    \t<br/>\r\n\t    \t\t<input value={pet.type} onChange={handleChange} type=\"text\" name=\"type\"/>\r\n\t    \t\t{ error.type ? <p style={{color:\"red\"}}>{error.type.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t    \t</p>\r\n\r\n\r\n\t    \t<p>description:\r\n\t    \t<br/>\r\n\t    \t\t<input value={pet.description} onChange={handleChange} type=\"text\" name=\"description\"/>\r\n\t    \t\t{ error.description ? <p style={{color:\"red\"}}>{error.description.message}</p>: null}\r\n\t    \t\t<br/>\r\n\t    \t</p>\r\n\t    \t\t<br/>\r\n\t    \t</p>\r\n\r\n\t    \t<p><h3>skills:</h3>\r\n\t    \t<br/>\r\n\t    \t\tskill 1:<br/>\r\n\t    \t\t<input value={pet.skill1} onChange={handleChange} type=\"text\" name=\"skill1\"/>\r\n\t    \t\r\n\t    \t\t<br/>\r\n\t    \t\tskill 2:<br/>\r\n\t    \t\t<input value={pet.skill2} onChange={handleChange} type=\"text\" name=\"skill2\"/>\r\n\r\n\t    \t\t<br/>\r\n    \t\tskill 3:<br/>\r\n\t    \t\t<input value={pet.skill3} onChange={handleChange} type=\"text\" name=\"skill3\"/>\r\n\t    \t\r\n\t    \t\t<br/>\r\n<input className=\"btn btn-primary\" type=\"submit\" value=\"update\"/>\r\n\t    \t</p>\r\n\t    </form>\r\n\t    </>\r\n\t  }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Edit;\r\n","import {useState,useEffect} from 'react';\r\nimport {Link} from '@reach/router'\r\nimport axios from 'axios'\r\n\r\nconst List = (props) => {\r\n\tconst [pets,setPets] = useState([])\r\n\tconst [deleted,setDeleted] = useState(false)\r\n\tuseEffect(() =>{\r\n\t\t\taxios.get(`http://localhost:8000/api/pets`)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\tsetPets(res.data)\r\n\t\t\t})\r\n\t\t\t.catch(err=>console.log(err.response.data))\r\n\t},[deleted])\r\n\r\n\tconst handleDelete = (id) =>{\r\n\t\t\taxios.delete(`http://localhost:8000/api/pets/${id}`)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tsetDeleted(!deleted)\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})\r\n\t\t\t.catch(err=>console.log(err.response.data))\r\n\t}\r\n  return (\r\n    <>\r\n    <h1>Pet shelter</h1>\r\n    <h4>these pets looking for shelter</h4>\r\n\r\n    <Link className=\"btn btn-primary\" to=\"/pets/new\">add new pet</Link>\r\n    <br/>\r\n    <br/>\r\n    \t<table className=\"table\">\r\n    \t\t  <thead>\r\n\t\t\t    <tr>\r\n\t\t\t      <th scope=\"col\">name</th>\r\n\t\t\t      <th scope=\"col\">type</th>\r\n\t\t\t      <th scope=\"col\">Actions</th>\r\n\t\t\t    </tr>\r\n\t\t\t  </thead>\r\n\t\t\t  <tbody>\r\n\t\t\t  \t{\r\n\t\t\t  \t\tpets.map((pet,petid) =>{\r\n\r\n\t\t\t  \t\t\treturn( <>\r\n\t\t\t  \t\t\t\t\t\t  \t<tr key={petid}>\r\n\t\t\t  \t\t\t\t\t\t  \t\t\t<td>{pet.name}</td>\r\n\t\t\t  \t\t\t\t\t\t  \t\t\t<td>{pet.type}</td>\r\n\t\t\t  \t\t\t\t\t\t  \t\t\t<td><Link className=\"btn btn-secondary\" to={`/pets/edit/${pet._id}`}>Edit</Link><Link to={\"/pets/show/\"+pet._id} class=\"btn btn-success\">Detail</Link></td>\r\n\t\t\t  \t\t\t\t\t\t  \t</tr>\t\t\t\r\n\t\t\t  \t\t\t\t\t\t  \t\t\t</>)\r\n\t\t\t  \t\t})\r\n\t\t\t\t   } \r\n\t\t\t  </tbody>\r\n\r\n    \t</table>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default List;","import {useState,useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport {navigate,Link} from '@reach/router'\r\n\r\nconst Show = ({id}) => {\r\n\tconst [pet,setPet] = useState()\r\n\tconst [disabled,setDisabled] = useState(false)\r\n\tconst [error,setError] = useState({})\r\n\tconst [err,setErr] = useState(true)\r\n\tuseEffect(() =>{\r\n\t\t\taxios.get(`http://localhost:8000/api/pets/${id}`)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tsetPet(res.data)\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\tsetErr(false)})\r\n\t\t\t.catch(err=>setErr(true))\r\n\t},[disabled])\r\n\tconst handleDelete = () =>{\r\n\t\t\taxios.delete(`http://localhost:8000/api/pets/${id}`)\r\n\t\t\t.then(res=>navigate(\"/\"))\r\n\t\t\t.catch(err=>console.log(err.response.data))\r\n\r\n\t}\r\n\tconst handleLikes = () =>{\r\n\t\taxios.put(`http://localhost:8000/api/pets/likes/${id}`)\r\n\t\t\t.then(res=>setDisabled(true))\r\n\t\t\t.catch(err=>console.log(err.response.data))\r\n\t}\r\n  return (\r\n    <div>\r\n    {\r\n\t\terr==true ? null\r\n\t    \t\t:\r\n\t    \t\t<>\r\n\r\n     <h1>Pet shelter</h1>\r\n    <h4>Details about:  {pet.name}</h4>\r\n    <Link className=\"btn btn-success\" to=\"/\">back to list</Link><button onClick={() =>handleDelete()} class=\"btn btn-danger\">Adopt {pet.name}</button>\r\n    <p>\r\n    \t<p>Pet Type: {pet.type}</p>\r\n    \t<p>Pet Description: {pet.description}</p>\r\n    \t<p>Pet skills: <span>{pet.skill1}</span><span> {pet.skill2}</span><span> {pet.skill3}</span></p>\r\n    \t<p><button disabled={disabled} onClick={handleLikes} className=\"btn btn-link\">Like</button>like(s) : {pet.likes}</p>\r\n    </p>\r\n    </>\r\n\t}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Show;","import './App.css';\nimport {useState,useEffect} from 'react'\nimport {Router} from '@reach/router';\nimport New from './components/New'\nimport Edit from './components/Edit'\nimport List from './components/List'\nimport Show from './components/Show'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n    <Router>\n      <List path=\"/\" />\n      <New path=\"/pets/new\"/>\n      <Edit path=\"/pets/edit/:id\"/>\n      <Show path=\"/pets/show/:id\"/>\n\n    </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}